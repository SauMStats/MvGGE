% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MvGGE.R
\name{simulate_data}
\alias{simulate_data}
\title{Simulate Data for MvGGE Analysis}
\usage{
simulate_data(
  n = 1000,
  maf = 0.1,
  f = 0.1,
  beta_g = c(0.1, 0.1),
  beta_e = c(0.2, 0.2),
  beta_ge = c(0.2, 0.2),
  rho = 0.3,
  tau1 = 0.7,
  tau2 = 0.8,
  seed = NULL
)
}
\arguments{
\item{n}{Sample size (default: 1000)}

\item{maf}{Minor allele frequency (default: 0.1)}

\item{f}{Environmental exposure prevalence (default: 0.1)}

\item{beta_g}{Vector of genetic main effects for Y1 and Y2 (default: c(0.1, 0.1))}

\item{beta_e}{Vector of environmental main effects for Y1 and Y2 (default: c(0.2, 0.2))}

\item{beta_ge}{Vector of gene-environment interaction effects for Y1 and Y2 (default: c(0.2, 0.2))}

\item{rho}{Correlation between phenotype errors (default: 0.3)}

\item{tau1}{Quantile threshold for binary Y1 (default: 0.7)}

\item{tau2}{Quantile threshold for binary Y2 (default: 0.8)}

\item{seed}{Random seed for reproducibility (default: NULL)}
}
\value{
A list containing:
\describe{
  \item{Y1, Y2}{Continuous phenotypes}
  \item{Yb1, Yb2}{Binary phenotypes (based on quantile thresholds)}
  \item{G}{Genotypes (0, 1, 2)}
  \item{E}{Environmental exposure (0, 1)}
  \item{parameters}{List of simulation parameters used}
}
}
\description{
Generates bivariate phenotype data with specified genetic and environmental effects.
Creates both continuous and binary versions of phenotypes.
}
\details{
The simulation model is:
\deqn{Y_j = \beta_{g,j} G + \beta_{e,j} E + \beta_{ge,j} G \times E + \epsilon_j}
where \eqn{j \in \{1,2\}} indexes the phenotypes and 
\eqn{(\epsilon_1, \epsilon_2) \sim MVN(0, \Sigma)} with correlation \eqn{\rho}.

Binary phenotypes are created by thresholding continuous phenotypes at specified quantiles.
Genotypes follow Hardy-Weinberg equilibrium with specified minor allele frequency.
}
\examples{
# Basic simulation
data <- simulate_data(n = 1000, maf = 0.3, f = 0.2)
utils::head(data.frame(data[1:6]))

# Simulation with strong effects
data_strong <- simulate_data(
  n = 500,
  beta_g = c(0.3, 0.3), 
  beta_ge = c(0.4, 0.4),
  rho = 0.6
)

# Test the simulated data
result <- test_MvGGE(data_strong$Y1, data_strong$Y2, data_strong$G, data_strong$E)
print(result)

}
\seealso{
\code{\link{test_MvGGE}}
}
